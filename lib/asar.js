// Generated by CoffeeScript 1.8.0
var AsarArchive, createArchive, createReadStream, extractArchive, extractArchiveSync, getEntries, loadArchive, opts;

AsarArchive = require('./archive');

opts = {};

createArchive = function(srcDir, archiveFilename, pattern, cb) {
  var archive;
  if (typeof pattern === 'function') {
    cb = pattern;
    pattern = null;
  }
  archive = new AsarArchive(opts);
  if (srcDir != null) {
    archive.addDirectory(srcDir, srcDir, {
      pattern: pattern
    }, function(err) {
      if (archiveFilename != null) {
        return archive.write(archiveFilename, {}, function(err) {
          return cb(err, archive);
        });
      }
    });
  }
};

loadArchive = function(archiveFilename) {
  var archive;
  archive = new AsarArchive(opts);
  archive.openSync(archiveFilename);
  return archive;
};

getEntries = function(archiveFilename, archiveRoot, pattern) {
  var archive, list;
  if (archiveRoot == null) {
    archiveRoot = '/';
  }
  if (pattern == null) {
    pattern = null;
  }
  archive = loadArchive(archiveFilename);
  list = archive.getEntries(archiveRoot, pattern);
  return list;
};

extractArchiveSync = function(archiveFilename, destDir, archiveRoot, pattern) {
  var archive;
  if (archiveRoot == null) {
    archiveRoot = '/';
  }
  if (pattern == null) {
    pattern = null;
  }
  archive = loadArchive(archiveFilename);
  archive.extractSync(destDir, archiveRoot, pattern);
};

extractArchive = function(archiveFilename, destDir, opts, cb) {
  var archive;
  archive = loadArchive(archiveFilename);
  archive.extract(destDir, opts, cb);
};

createReadStream = function(filename) {
  return loadArchive(archiveFilename).createReadStream(filename);
};

module.exports = {
  AsarArchive: AsarArchive,
  createArchive: createArchive,
  loadArchive: loadArchive,
  getEntries: getEntries,
  extractArchiveSync: extractArchiveSync,
  extractArchive: extractArchive,
  createReadStream: createReadStream,
  opts: opts
};
